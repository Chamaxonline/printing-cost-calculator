
name: Deploy Next.js site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build-project:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install NPM dependencies
        working-directory: cost-calculator
        run: npm install

      - name: Firebase Initialization
        run: |
          echo ${{ secrets.FIREBASE_API_KEY }} > ./.env.local
          echo ${{ secrets.FIREBASE_AUTH_DOMAIN }} >> ./.env.local
          echo ${{ secrets.FIREBASE_PROJECT_ID }} >> ./.env.local
          echo ${{ secrets.FIREBASE_STORAGE_BUCKET }} >> ./.env.local
          echo ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }} >> ./.env.local
          echo ${{ secrets.FIREBASE_APP_ID }} >> ./.env.local

          npm run build
        working-directory: cost-calculator
        env:
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
        
      - name: Build project assets
        working-directory: cost-calculator
        run: npm run build        
      - name: Upload static site content
        uses: actions/upload-artifact@v3
        with:
            name: static-site
            path: next/
  release-project:
          name: Release project
          runs-on: ubuntu-latest
          needs: build-project
          steps:
          - name: Download artifact
            uses: actions/download-artifact@v3
            with:
              name: static-site
          - name: Test artifact download
            run: ls-R

          - name: Upload Build Artifacts
            uses: actions/upload-artifact@v2
            with:
              name: static-site   # Should match the download step
              path: path/to/artifact

          - name: Download Build Artifacts
            uses: actions/download-artifact@v2
            with:
              name: static-site   # Should match the upload step
              path: path/to/download/location
